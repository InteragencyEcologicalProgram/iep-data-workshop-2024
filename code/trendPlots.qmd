---
title: "Bay Delta Figure Gallery"
author: "DUWG"
date: "2024-01-12"
format:
  html: 
    code-fold: true
    code-overflow: wrap
    toc: true
    toc-float: true
---

```{r, include=FALSE}
# Knit options
knitr::opts_chunk$set(dpi=320, fig.width=16, fig.height=11, warning=FALSE, message=F, 
                      dev = "CairoPNG")
```

These are some ways to explore time series data. I am showing water temperature data here but this can be applied to biotic data, such as fish catch, as well.

```{r}
# Libraries
library(dplyr)      # Data wrangling
library(lubridate)  # Working with dates
library(ggplot2)    # Plotting
library(ggridges)   # Add ridge plot support for ggplot
library(viridis)    # Add useful color palettes to ggplot

# Setting ggplot theme, useful to help with consistency and allows you to get away with not specifying everytime
theme_set(theme_classic(base_size = 24))

# Downloading water temperature from the MAL CDEC gauges for ease of us
malWaterTemp <- read.csv("https://cdec.water.ca.gov/dynamicapp/req/CSVDataServlet?Stations=MAL&SensorNums=25&dur_code=H&Start=2009-01-01&End=2024-04-04") %>% 
  # Format data correctly and covnert temp to C
  mutate(date = as.Date(DATE.TIME, format = "%Y%m%d"),
         waterTemperatureC = (as.numeric(VALUE) - 32) * 5/9) %>% 
  # Quick and dirty filter to remove outliers
  filter(between(waterTemperatureC, 8, 30)) %>% 
  # Need a dummy date variable if we want to plot all years on the same season
  # Year picked only needs to be a leap year but freedom is yours
  group_by(year = year(date),
           month = month(date),
           dummyDate = as.Date(paste0("2024-", format(date, format = "%m-%d"))),
           color = ifelse(year == 2024, "2024", "Others")) %>% 
  # Calculate daily water temperature, since this is hourly data
  summarise(dailyTemperature = mean(waterTemperatureC, na.rm = T))
```

## Explore trend of interest against historical or others

This plot works best when you want to highlight a particular trend against other trends across different instances, such as year or station. 

```{r}
ggplot(malWaterTemp, aes(dummyDate, dailyTemperature, group = year, color = color, size = color)) +
  geom_line() +
  scale_color_manual(values = c("2024" = "firebrick", "Others" = "grey70")) +
  scale_size_manual(values = c("2024" = 1.5, "Others" = 0.7)) + 
  scale_x_date(date_labels = "%b-%d") +
  labs(x = "Date", y = "Water Temperature (\u00B0C)", 
       title = "MAL, Daily Mean Water Temperature Across a Season",
       subtitle = paste0("Year range: ", paste(range(malWaterTemp$year), collapse = " to ")),
       color = "Year",
       size = "Year") 
```

This type of plot allows you to very quickly place the trend of interest in respect with all other historical trends.

## Explore trends across three axes

Heat plots are very useful when you have three axes of interest (so are facets). Here, the three axes are date on the x, year on the y, and temperature on the z. 

```{r}
ggplot(malWaterTemp, aes(dummyDate, year, fill = dailyTemperature)) +
  geom_tile() +
  # The turbo color palette is the easiest to see for heatmaps, in my opinion
  scale_fill_viridis(option = "turbo") +
  # expand = c(0, 0) is used to remove the white spaces before and after the first axis values
  scale_x_date(date_labels = "%b", expand = c(0, 0), date_breaks = "1 month") +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "Date", y = "Year", 
       title = "MAL, Daily Mean Water Temeprature Across a Season",
       subtitle = paste0("Year range: ", paste(range(malWaterTemp$year), collapse = " to ")),
       fill = "Water Temperature (\u00B0C)") +
  theme_classic(base_size = 24) +
  # Can move the legend position, size, and heigh  via theme() and guide()
  theme(legend.position = "bottom",
        legend.key.width = grid::unit(6, "cm"),
        legend.key.height = grid::unit(0.75, "cm")) +
  guides(fill = guide_colorbar(title.position = "bottom", 
                               title.hjust = 0.5))
```

The heatplot allows us to see quickly that the middle of June through October is consistently the hottest period of the year.

We can also use a density ridge plot to visualize this as well. This approach also highlights the distribution for each month throughout the years as well.

```{r}
library(ggridges)
# Note that this is a density plot across all years
malWaterTemp %>% 
  mutate(Month = month(dummyDate, label = T, abbr = F)) %>% 
  ggplot(aes(dailyTemperature, Month, fill = after_stat(x))) +
  geom_density_ridges_gradient(rel_min_height = 0.01) +
  scale_fill_viridis(option = "H") +
  theme_classic(base_size = 24) +
  theme(panel.grid.major.y = element_line()) +
  labs(x = "Water Temperature (\u00B0C)", y = "Month", 
       title = "MAL, General Daily Mean Water Temeprature Trend Across a Season",
       subtitle = paste0("Year range: ", paste(range(malWaterTemp$year), collapse = " to ")),
       fill = "Water Temperature (\u00B0C)")
```


